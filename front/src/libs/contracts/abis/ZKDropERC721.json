{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseTokenURI",
          "type": "string"
        },
        {
          "internalType": "bytes16",
          "name": "appId",
          "type": "bytes16"
        },
        {
          "internalType": "bytes16",
          "name": "groupId",
          "type": "bytes16"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "receivedAppId",
          "type": "bytes16"
        },
        {
          "internalType": "bytes16",
          "name": "expectedAppId",
          "type": "bytes16"
        }
      ],
      "name": "AppIdMismatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "receivedNamespace",
          "type": "bytes16"
        },
        {
          "internalType": "bytes16",
          "name": "expectedNamespace",
          "type": "bytes16"
        }
      ],
      "name": "NamespaceMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZkConnectResponseIsEmpty",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseTokenURI",
          "type": "string"
        }
      ],
      "name": "BaseTokenURIChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADDRESSES_PROVIDER",
      "outputs": [
        {
          "internalType": "contract IAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZK_CONNECT_LIB_VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "appId",
      "outputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "zkConnectResponse",
          "type": "bytes"
        }
      ],
      "name": "claimWithZkConnect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getZkConnectVersion",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "zkConnectResponse",
          "type": "bytes"
        }
      ],
      "name": "transferWithZkConnect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "zkConnectResponseEncoded",
          "type": "bytes"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Auth",
                  "name": "authRequest",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Claim",
                  "name": "claimRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageSignatureRequest",
                  "type": "bytes"
                }
              ],
              "internalType": "struct DataRequest[]",
              "name": "dataRequests",
              "type": "tuple[]"
            },
            {
              "internalType": "enum LogicalOperator[]",
              "name": "operators",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct ZkConnectRequestContent",
          "name": "zkConnectRequestContent",
          "type": "tuple"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "namespace",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "version",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedClaim[]",
              "name": "verifiedClaims",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "anonMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedAuth[]",
              "name": "verifiedAuths",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes[]",
              "name": "signedMessages",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct ZkConnectVerifiedResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "namespace",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "version",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Claim",
                  "name": "claim",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Auth",
                  "name": "auth",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "signedMessage",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "provingScheme",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "proofData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct ZkConnectProof[]",
              "name": "proofs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct ZkConnectResponse",
          "name": "zkConnectResponse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Auth",
                  "name": "authRequest",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Claim",
                  "name": "claimRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageSignatureRequest",
                  "type": "bytes"
                }
              ],
              "internalType": "struct DataRequest[]",
              "name": "dataRequests",
              "type": "tuple[]"
            },
            {
              "internalType": "enum LogicalOperator[]",
              "name": "operators",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct ZkConnectRequestContent",
          "name": "zkConnectRequestContent",
          "type": "tuple"
        },
        {
          "internalType": "bytes16",
          "name": "namespace",
          "type": "bytes16"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "namespace",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "version",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedClaim[]",
              "name": "verifiedClaims",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "anonMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedAuth[]",
              "name": "verifiedAuths",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes[]",
              "name": "signedMessages",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct ZkConnectVerifiedResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "zkConnectResponseEncoded",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "namespace",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "version",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedClaim[]",
              "name": "verifiedClaims",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "anonMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedAuth[]",
              "name": "verifiedAuths",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes[]",
              "name": "signedMessages",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct ZkConnectVerifiedResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "zkConnectResponseEncoded",
          "type": "bytes"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Auth",
                  "name": "authRequest",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Claim",
                  "name": "claimRequest",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageSignatureRequest",
                  "type": "bytes"
                }
              ],
              "internalType": "struct DataRequest[]",
              "name": "dataRequests",
              "type": "tuple[]"
            },
            {
              "internalType": "enum LogicalOperator[]",
              "name": "operators",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct ZkConnectRequestContent",
          "name": "zkConnectRequestContent",
          "type": "tuple"
        },
        {
          "internalType": "bytes16",
          "name": "namespace",
          "type": "bytes16"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "namespace",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "version",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedClaim[]",
              "name": "verifiedClaims",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "anonMode",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "proofId",
                  "type": "uint256"
                }
              ],
              "internalType": "struct VerifiedAuth[]",
              "name": "verifiedAuths",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes[]",
              "name": "signedMessages",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct ZkConnectVerifiedResult",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0806040523462000caa576200598c80380380916200002082856200102d565b833981019060a08183031262000caa5780516001600160401b03811162000caa57826200004f91830162001076565b60208201516001600160401b03811162000caa57836200007191840162001076565b604083015190936001600160401b03821162000caa576200009491840162001076565b91620000b16080620000a960608401620010d1565b9201620010d1565b825190926001600160401b038211620005f5578190620000d36000546200122d565b601f811162000fec575b50602090601f831160011462000f745760009262000f68575b50508160011b916000199060031b1c1916176000555b83516001600160401b038111620005f5576200012a6001546200122d565b601f811162000f15575b506020601f821160011462000ea557819293949560009262000e99575b50508160011b916000199060031b1c1916176001555b733340ac0cafb3ae34ddd53dba0d7344c1cf3efe056080818152600780546001600160801b0319169390911c9290921790915560408051908101906001600160401b03821181831017620005f557620002009260209260405260118252703d35a1b7b73732b1ba2b32b934b334b2b960791b83830152604051808095819463349f642f60e11b8352866004840152602483019062001206565b03915afa90811562000db75760009162000e50575b50600680546001600160a01b0319166001600160a01b03929092169190911790556040516338de608760e21b81526001600160801b0319909116600482015260008160248173__$e9ef01c02331ac050e210f08990e489368$__5af490811562000db75760009162000e08575b50604051636a1c338160e01b81526001600482015260008160248173__$4411f09a9ff980e362e6542040afcba2ef$__5af490811562000db75760009162000dc3575b5060408051639ceb817d60e01b81526004810182905283516001600160801b03199081166044830152602085015116606482015290830151909290600781101562000662576084840152606081015160a48401526080015160a060c4840152620003349060e484019062001206565b8281036003190160248401528151916005831015620006625762000386826080606087959460009787965260208101511515602085015260408101516040850152015191816060820152019062001206565b038173__$328a7afcc2d125d5a32bab9c2b7f58dbc2$",
    "sourceMap": "202:1811:37:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;-1:-1:-1;202:1811:37;;:::i;:::-;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;753:42:34;202:1811:37;734:62:34;;;1112:14;202:1811:37;;-1:-1:-1;;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;202:1811:37;;;;;;;;;;;;;;1176:51:34;;;;;;202:1811:37;;;;;;:::i;:::-;1176:51:34;;;;;;;;;-1:-1:-1;1176:51:34;;;202:1811:37;-1:-1:-1;1136:92:34;202:1811:37;;-1:-1:-1;;;;;;202:1811:37;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;-1:-1:-1;;;611:41:37;;-1:-1:-1;;;;;;202:1811:37;;;1176:51:34;611:41:37;;202:1811;-1:-1:-1;202:1811:37;;;611:15;:41;;;;;;;-1:-1:-1;611:41:37;;;202:1811;-1:-1:-1;202:1811:37;;-1:-1:-1;;;688:47:37;;202:1811;1176:51:34;688:47:37;;202:1811;-1:-1:-1;202:1811:37;;;688:14;:47;;;;;;;-1:-1:-1;688:47:37;;;202:1811;-1:-1:-1;202:1811:37;;;-1:-1:-1;;;771:88:37;;1176:51:34;771:88:37;;202:1811;;;;;-1:-1:-1;;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;1112:14:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;202:1811:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;771:88;:26;;:88;;;;;;;-1:-1:-1;771:88:37;;;202:1811;;;;;;;;;;;;745:114;202:1811;;745:114;202:1811;;;;;;;-1:-1:-1;745:114:37;-1:-1:-1;202:1811:37;;;-1:-1:-1;;;;;;;;;;;202:1811:37;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;;-1:-1:-1;202:1811:37;;;;;;-1:-1:-1;;;202:1811:37;;;;;;;;;;-1:-1:-1;;202:1811:37;;;;-1:-1:-1;;;;;;;202:1811:37;;;;;1938:23;202:1811;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;202:1811:37;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;1938:23;202:1811;;;;;;;;;;;;;;;:::i;:::-;1976:28;;;202:1811;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:23;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;;;;;-1:-1:-1;;;;;;;;;;;202:1811:37;;;;;;;;;;;;;;;;1938:23;202:1811;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:23;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;-1:-1:-1;202:1811:37;;1176:51:34;202:1811:37;;-1:-1:-1;202:1811:37;;;-1:-1:-1;202:1811:37;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;1176:51:34;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;;202:1811:37;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;745:114;202:1811;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:14:34;202:1811:37;;;;;;;1176:51:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:92:34;202:1811:37;;;;:::i;:::-;1136:92:34;202:1811:37;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;202:1811:37;;;;;;;;;;;;;;;;;;;1136:92:34;202:1811:37;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;1112:14:34;202:1811:37;;;;:::i;:::-;1112:14:34;202:1811:37;;;:::i;:::-;;;;;;;;;;;;745:114;202:1811;;;;;-1:-1:-1;202:1811:37;;;;-1:-1:-1;;;;202:1811:37;;;;;;;;;;;1112:14:34;202:1811:37;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;1112:14:34;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;-1:-1:-1;;202:1811:37;;;;;;;;;;;;;;;745:114;202:1811;;;;;;;;;;;;;;;1112:14:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;1136:92:34;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;-1:-1:-1;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:92:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;;745:114;-1:-1:-1;202:1811:37;-1:-1:-1;;;;;;;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;745:114:37;202:1811;;-1:-1:-1;202:1811:37;;;;;;;;;:::i;:::-;-1:-1:-1;202:1811:37;;;;-1:-1:-1;1176:51:34;202:1811:37;;;-1:-1:-1;202:1811:37;;;;;1136:92:34;202:1811:37;;;:::i;:::-;;1112:14:34;202:1811:37;;;:::i;:::-;;;;;;;;-1:-1:-1;202:1811:37;;1176:51:34;202:1811:37;;-1:-1:-1;202:1811:37;771:88;;;;;-1:-1:-1;771:88:37;;;;;;:::i;:::-;202:1811;771:88;;;;202:1811;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;771:88;;;202:1811;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;771:88;;;202:1811;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;771:88;;;202:1811;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;202:1811:37;;;-1:-1:-1;202:1811:37;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;771:88;;;;202:1811;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;771:88;;202:1811;;;;;;;;;;;;;;;;;;;;771:88;;;202:1811;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;771:88;;;202:1811;-1:-1:-1;;202:1811:37;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;771:88;;;;202:1811;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;771:88;;;;202:1811;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;771:88;202:1811;771:88;;;;;;;;;;;;;202:1811;;;;;;;:::i;:::-;;;;;;;;;;;;;;;771:88;202:1811;;;-1:-1:-1;202:1811:37;;;;;688:47;;;;;-1:-1:-1;688:47:37;;;;;;:::i;:::-;;;202:1811;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;:::i;:::-;688:47;;;611:41;;;-1:-1:-1;611:41:37;-1:-1:-1;611:41:37;;;;;;:::i;:::-;202:1811;611:41;;;;202:1811;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;611:41;;;202:1811;;;:::i;:::-;611:41;;;1176:51:34;;;202:1811:37;1176:51:34;;202:1811:37;1176:51:34;;;;;;202:1811:37;1176:51:34;;;:::i;:::-;;;202:1811:37;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;1176:51:34;;;;;;-1:-1:-1;1176:51:34;;202:1811:37;;;;-1:-1:-1;202:1811:37;;;;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;-1:-1:-1;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;202:1811:37;;;;;-1:-1:-1;202:1811:37;;;-1:-1:-1;;;;;;;;;;;202:1811:37;-1:-1:-1;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;-1:-1:-1;;;;;;;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;202:1811:37;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;202:1811:37;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;-1:-1:-1;;202:1811:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;-1:-1:-1;;;;;;202:1811:37;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;202:1811:37;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;202:1811:37;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;:::i",
    "linkReferences": {
      "src/libs/utils/AuthRequestLib.sol": {
        "AuthRequestLib": [
          {
            "start": 671,
            "length": 20
          }
        ]
      },
      "src/libs/utils/ClaimRequestLib.sol": {
        "ClaimRequestLib": [
          {
            "start": 604,
            "length": 20
          }
        ]
      },
      "src/libs/utils/ZkConnectRequestContentLib.sol": {
        "ZkConnectRequestContentLib": [
          {
            "start": 906,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146116a7575080630542975c1461163857806306fdde0314611577578063081812fc1461153b578063095ea7b31461133057806323b872dd1461130c57806342842e0e146112a35780635f64d5f4146112005780636352211e146111a657806370a08231146110b7578063790fb2df1461104757806380afdea814610fe65780638407c1d614610d5457806386e01f7814610d1a5780638e760afe14610c9f57806395d89b4114610b84578063a22cb46514610a50578063b88d4fde146109e1578063c87b56dd146108c3578063d3b12a37146106d7578063deff7b5214610272578063e985e9c5146101f05763ef19bc461461011c57600080fd5b346101d75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d7576004602073ffffffffffffffffffffffffffffffffffffffff60065416604051928380927f414772760000000000000000000000000000000000000000000000000000000082525afa80156101e4576000906101ad575b602090604051908152f35b506020813d82116101dc575b816101c660209383611910565b810103126101d757602090516101a2565b600080fd5b3d91506101b9565b6040513d6000823e3d90fd5b346101d75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d7576102276117fa565b61022f61181d565b9073ffffffffffffffffffffffffffffffffffffffff809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b346101d75760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760043567ffffffffffffffff81116101d7576102c190369060040161198b565b60243567ffffffffffffffff81116101d7576102e1903690600401611b28565b6102e9611a56565b916102f261273c565b508051156106ad5780518101906020818303126101d75760208101519067ffffffffffffffff82116101d757016080818303126101d75760405191610336836118a0565b61034260208301612780565b835261035060408301612780565b602084015260608201516040840152608082015167ffffffffffffffff81116101d75760208201603f8285010112156101d7576020818401015190610394826119d2565b936103a26040519586611910565b82855260208501906020850160408560051b8584010101116101d757604083820101915b60408560051b858401010183106103fb576103f76103eb8b8b8b8b6060820152613408565b60405191829182611d44565b0390f35b82519067ffffffffffffffff82116101d75760c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08387860101890301126101d7576040519161044a836118bc565b60408187860101015167ffffffffffffffff81116101d75760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082848a890101018b0301126101d757604051906104a1826118f4565b6104b3604082858b8a01010101612780565b82526104c7606082858b8a01010101612780565b6020830152608081848a89010101015160078110156101d75760408301528588018301810160a0810151606084015260c001519067ffffffffffffffff82116101d75760406105229260208d0192868c8b01010101016127ad565b6080820152835260608187860101015167ffffffffffffffff81116101d75760807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082848a890101018b0301126101d75760405190610580826118a0565b604081848a89010101015160058110156101d75782526105a8606082858b8a010101016127ef565b6020830152858801830181016080810151604084015260a001519067ffffffffffffffff82116101d75760406105ea9260208d0192868c8b01010101016127ad565b6060820152602084015260808187860101015167ffffffffffffffff81116101d75761062390604060208b0191848a89010101016127ad565b6040840152838601810160a0810151606085015260c0015167ffffffffffffffff81116101d75761066190604060208b0191848a89010101016127ad565b608084015260e0818786010101519167ffffffffffffffff83116101d75760409361069b60209493868695868e01928c8b010101016127ad565b60a082015281520193019290506103c6565b60046040517fdb3d87f7000000000000000000000000000000000000000000000000000000008152fd5b346101d7576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760043567ffffffffffffffff81116101d75761072a61074191369060040161198b565b610732613af3565b9061073b61273c565b506127fc565b6040610785608073ffffffffffffffffffffffffffffffffffffffff61077c61076d60a0870151614514565b51878082518301019101614550565b16930151614514565b510151918115610866576002906107c86107c285600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416151590565b1561457c565b6107f86107c285600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416151590565b826000526003815260406000206001815401905583600052526040600020817fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4005b606490604051907f08c379a000000000000000000000000000000000000000000000000000000000825280600483015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b346101d7576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760405190600082600a54916109078361202b565b928383526001908582821691826000146109a3575050600114610946575b5061093292500383611910565b6103f76040519282849384528301906117b7565b849150600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8906000915b85831061098b575050610932935082010185610925565b80548389018501528794508693909201918101610974565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168582015261093295151560051b85010192508791506109259050565b346101d75760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d757610a186117fa565b610a2061181d565b6064359167ffffffffffffffff83116101d757610a44610a4e93369060040161198b565b916044359161221a565b005b346101d75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d757610a876117fa565b602435908115158092036101d75773ffffffffffffffffffffffffffffffffffffffff1690813314610b265733600052600560205260406000208260005260205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b346101d75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760405160006001805490610bc68261202b565b80855291818116908115610c5a5750600114610c01575b6103f784610bed81860382611910565b6040519182916020835260208301906117b7565b600081815292507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610c42575050508101602001610bed82610bdd565b80546020858701810191909152909301928101610c2a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660208087019190915292151560051b85019092019250610bed9150839050610bdd565b346101d75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760043567ffffffffffffffff81116101d7576103eb610cf46103f792369060040161198b565b610cfc61273c565b5060405190610d0a826118d8565b60608252606060208301526127fc565b346101d75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d757602060405160018152f35b346101d7577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060813601126101d7576004359067ffffffffffffffff82116101d75760809082360301126101d75760405190610db0826118a0565b610dbc81600401611a85565b8252610dca60248201611a85565b602083015260448101356040830152606481013567ffffffffffffffff81116101d7573660238284010112156101d75760048183010135610e0a816119d2565b92610e186040519485611910565b818452602084013660248460051b8685010101116101d757602484830101905b60248460051b86850101018210610e85578686606082015260243567ffffffffffffffff81116101d7576103f791610e776103eb923690600401611b28565b610e7f611a56565b91613408565b81359067ffffffffffffffff82116101d75760c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc8388870101360301126101d75760405191610ed4836118bc565b60248188870101013567ffffffffffffffff81116101d757610f009060243691848b8a01010101611ab2565b835260448188870101013567ffffffffffffffff81116101d757610f2e9060243691848b8a010101016119ea565b602084015267ffffffffffffffff606482898801010135116101d757610f6136868901830160648101350160240161198b565b604084015284870181016084810135606085015260a4013567ffffffffffffffff81116101d757610f9c9060243691848b8a0101010161198b565b608084015260c4818887010101359167ffffffffffffffff83116101d757602493610fd46020949386869536928d8c0101010161198b565b60a08201528152019201919050610e38565b346101d75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d757602060075460801b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000060405191168152f35b346101d75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75767ffffffffffffffff6004358181116101d75761109790369060040161198b565b906024359081116101d7576103f7916107326103eb923690600401611b28565b346101d75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75773ffffffffffffffffffffffffffffffffffffffff6111036117fa565b1680156111225760005260036020526020604060002054604051908152f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152fd5b346101d75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760206111e2600435611ff9565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b346101d75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760043567ffffffffffffffff81116101d75761125561072a610a4e92369060040161198b565b6040611291608073ffffffffffffffffffffffffffffffffffffffff61077c61128160a0870151614514565b5160208082518301019101614550565b5101519061129e82611ff9565b6123d0565b346101d7576112b136611840565b60405191602083019383851067ffffffffffffffff8611176112dd57610a4e946040526000845261221a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b346101d757610a4e61131d36611840565b9161129e61132b84336122ca565b61218f565b346101d75760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d7576113676117fa565b6024359073ffffffffffffffffffffffffffffffffffffffff808061138b85611ff9565b169216918083146114b757803314908115611492575b501561140e578260005260046020526040600020827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790556113e683611ff9565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b9050600052600560205260406000203360005260205260ff60406000205416846113a1565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152fd5b346101d75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d75760206111e2600435612133565b346101d75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d757604051600080546115b68161202b565b80845290600190818116908115610c5a57506001146115df576103f784610bed81860382611910565b600080805292507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410611620575050508101602001610bed82610bdd565b80546020858701810191909152909301928101611608565b346101d75760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d757602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101d75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d757600435907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101d757817f80ac58cd000000000000000000000000000000000000000000000000000000006020931490811561176a575b8115611740575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483611739565b7f5b5e139f0000000000000000000000000000000000000000000000000000000081149150611732565b60005b8381106117a75750506000910152565b8181015183820152602001611797565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936117f381518092818752878088019101611794565b0116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101d757565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036101d757565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126101d75773ffffffffffffffffffffffffffffffffffffffff9060043582811681036101d7579160243590811681036101d7579060443590565b6080810190811067ffffffffffffffff8211176112dd57604052565b60c0810190811067ffffffffffffffff8211176112dd57604052565b6040810190811067ffffffffffffffff8211176112dd57604052565b60a0810190811067ffffffffffffffff8211176112dd57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176112dd57604052565b67ffffffffffffffff81116112dd57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f820112156101d7578035906119a282611951565b926119b06040519485611910565b828452602083830101116101d757816000926020809301838601378301015290565b67ffffffffffffffff81116112dd5760051b60200190565b91906080838203126101d75760405190611a03826118a0565b8193803560058110156101d7578352602081013580151581036101d75760208401526040810135604084015260608101359167ffffffffffffffff83116101d757606092611a51920161198b565b910152565b604435907fffffffffffffffffffffffffffffffff00000000000000000000000000000000821682036101d757565b35907fffffffffffffffffffffffffffffffff00000000000000000000000000000000821682036101d757565b919060a0838203126101d75760405190611acb826118f4565b8193611ad681611a85565b8352611ae460208201611a85565b6020840152604081013560078110156101d75760408401526060810135606084015260808101359167ffffffffffffffff83116101d757608092611a51920161198b565b91909160409081818503126101d757815167ffffffffffffffff94818401868111838210176112dd578452819583358181116101d75784019382601f860112156101d757843594611b78866119d2565b90611b8588519283611910565b868252602096878084019160051b830101918683116101d757888101915b838310611c1e57505050508452848101359182116101d7570181601f820112156101d757803590611bdf611bd6836119d2565b96519687611910565b818652848087019260051b8201019283116101d7578401905b828210611c06575050500152565b813560028110156101d7578152908401908401611bf8565b82358781116101d7578201606091827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838c0301126101d7578c51928084018481108b821117611ccd578e528c8301358a81116101d7578b8e611c83928601016119ea565b84528d8301358a81116101d7578b8e611c9e92860101611ab2565b8d850152820135928984116101d7578d611cbe8c8f80978197010161198b565b90820152815201920191611ba3565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b906007821015611d085752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b906005821015611d085752565b90602080835260e08301907fffffffffffffffffffffffffffffffff000000000000000000000000000000009384845116828201528482850151169260409384830152838501519460609586840152858101519560c097608093898587015288518091526101009187838801938360051b8901019a01926000915b8c848410611efa5750505050505082820151957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09760a0948987830301868801528851928383528883019189808660051b8601019b01956000945b868610611e8c575050505050505050015194848285030191015283519182815281810182808560051b8401019601946000925b858410611e5e575050505050505090565b909192939495968580611e7b838686600196030188528b516117b7565b990194019401929594939190611e4d565b909192939495969c9a9b8c808f838f888f93611ede908d83948b60019b030190525194611eba858751611d37565b868601511515878601528c8601518d8601528a86015190808c8701528501906117b7565b9301519101529f0196019601949695939291909c9b9a9c611e1a565b99808c8e899f839f9c9a9e8a9f8f600198999a9b9c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00611f5b92611f759603018c5251958a87511686528a8888015116888701528087015190860190611cfb565b80850151908401528b84015190808d8501528301906117b7565b9160a0809101519101529b0193019301919392909a949699989a611dbf565b15611f9b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152fd5b600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416612028811515611f94565b90565b90600182811c92168015612074575b602083101461204557565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161203a565b906000929180549161208f8361202b565b9182825260019384811690816000146120f157506001146120b1575b50505050565b90919394506000526020928360002092846000945b8386106120dd5750505050010190388080806120ab565b8054858701830152940193859082016120c6565b91505060209495507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009193501683830152151560051b010190388080806120ab565b61216861216382600052600260205273ffffffffffffffffffffffffffffffffffffffff60406000205416151590565b611f94565b600052600460205273ffffffffffffffffffffffffffffffffffffffff6040600020541690565b1561219657565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f766564000000000000000000000000000000000000006064820152fd5b9061223e93929161222e61132b84336122ca565b6122398383836123d0565b612554565b1561224557565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b9073ffffffffffffffffffffffffffffffffffffffff80806122eb84611ff9565b1693169183831493841561231e575b508315612308575b50505090565b61231491929350612133565b1614388080612302565b909350600052600560205260406000208260005260205260ff6040600020541692386122fa565b1561234c57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152fd5b90612405916123de84611ff9565b9173ffffffffffffffffffffffffffffffffffffffff938493848094169485911614612345565b169182156124d157816124229161241b86611ff9565b1614612345565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60008481526004602052604081207fffffffffffffffffffffffff0000000000000000000000000000000000000000908181541690558382526003602052604082207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b9293600093909291803b15612731579484916125d596604051809481937f150b7a02000000000000000000000000000000000000000000000000000000009788845233600485015273ffffffffffffffffffffffffffffffffffffffff80921660248501526044840152608060648401528260209b8c9760848301906117b7565b0393165af18491816126d5575b506126ac575050503d6000146126a4573d6125fc81611951565b9061260a6040519283611910565b81528091833d92013e5b805191826126a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608490fd5b01fd5b506060612614565b7fffffffff00000000000000000000000000000000000000000000000000000000161492509050565b9091508581813d831161272a575b6126ed8183611910565b8101031261272657517fffffffff00000000000000000000000000000000000000000000000000000000811681036127265790386125e2565b8480fd5b503d6126e3565b505050915050600190565b6040519060c0820182811067ffffffffffffffff8211176112dd57604052606060a08360008152600060208201526000604082015282808201528260808201520152565b51907fffffffffffffffffffffffffffffffff00000000000000000000000000000000821682036101d757565b81601f820112156101d75780516127c381611951565b926127d16040519485611910565b818452602082840101116101d7576120289160208085019101611794565b519081151582036101d757565b9061280561273c565b508151156106ad5781518201916020818403126101d75760208101519067ffffffffffffffff82116101d75701906080828403126101d7576040519261284a846118a0565b61285660208401612780565b845261286460408401612780565b602085015260608301516040850152608083015167ffffffffffffffff81116101d75760208201603f8286010112156101d75760208185010151906128a8826119d2565b946128b66040519687611910565b82865260208601906020850160408560051b8584010101116101d757604083820101915b60408560051b858401010183106130c0575050505050506060830191825261290061273c565b507fffffffffffffffffffffffffffffffff00000000000000000000000000000000908184511660075460801b908382168103613065575050816020850151167fb8e2054f8a912367e38a22ce773328ff0000000000000000000000000000000080820361302e575050906040939173ffffffffffffffffffffffffffffffffffffffff600654169385519586947f6e2ed80800000000000000000000000000000000000000000000000000000000865281600487015260c48601948082511660448801526020820151166064870152015160848501525191608060a4850152825180915260e4840190602060e48260051b8701019401916000905b828210612f7a57505050507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83830301602484015260408201908051916040845282518091526060840190602060608260051b8701019401916000905b828210612ef45750505050602001519160208183039101526020808351928381520192019060005b818110612ed1575050509181600081819503925af19081156101e457600091612aa8575090565b903d908181843e612ab98284611910565b6020838381010312612ece5782519267ffffffffffffffff8411612eca5760c08482018483010312612eca5760405193612af2856118bc565b612afd818301612780565b8552612b0d602082840101612780565b6020860152818101604081810151908701526060015167ffffffffffffffff8111612cd757848301601f8284860101011215612cd75780828401015190612b53826119d2565b91612b616040519384611910565b808352602083019187860160208360051b83888a0101010111612dc9576020818688010101925b60208360051b83888a010101018410612dcd575050505060608601526080818301015167ffffffffffffffff8111612cd757848301601f8284860101011215612cd75780828401015190612bdb826119d2565b91612be96040519384611910565b808352602083019187860160208360051b83888a0101010111612dc9576020818688010101925b60208360051b83888a010101018410612cdb5750505050608086015260a081830101519067ffffffffffffffff8211612cd757820101838201601f82011215612cd357805192612c5f846119d2565b94612c6d6040519687611910565b84865260208087019560051b840101938181018511612cd35760208401955b858710612ca2575050505050505060a082015290565b865167ffffffffffffffff811161272657602091612cc8839283878701918a01016127ad565b815201960195612c8c565b8280fd5b8380fd5b835167ffffffffffffffff8111612dc55760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082858a8c0101018c8b01030112612dc55760405190612d2d826118f4565b602081858a8c01010101516005811015612dc1578252612d55604082868b8d010101016127ef565b602083015288880184018101606081015160408401526080015167ffffffffffffffff8111612dc157926020939260a0859493878f8e612da58f92988a809a8401918787878701010101016127ad565b6060870152010101015160808201528152019401939050612c10565b8a80fd5b8880fd5b8680fd5b835167ffffffffffffffff8111612dc55760c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082858a8c0101018c8b01030112612dc55760405190612e1f826118bc565b612e31602082868b8d01010101612780565b8252612e45604082868b8d01010101612780565b6020830152606081858a8c01010101516007811015612dc1576040830152888801840181016080810151606084015260a0015167ffffffffffffffff8111612dc157926020939260c0859493878f8e612eae8f92988a809a8401918787878701010101016127ad565b6080870152010101015160a08201528152019401939050612b88565b5080fd5b80fd5b9193509160208082612ee660019488516133fb565b019401910191859392612a81565b9193948697506020612f68827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0600195979a8495030186528951906040612f57612f4784516060855260608501906133c1565b868501518482038886015261335a565b9201519060408184039101526117b7565b97019201920188969594939192612a59565b919394602061301d827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c600195979a849503018652895161300a612fee612fdc612fcc845160c080885287019061335a565b87850151868203898801526133c1565b604084015185820360408701526117b7565b60608301516060850152608083015184820360808601526117b7565b9160a080920151918184039101526117b7565b9701920192018795949391926129fc565b60449250604051917fc8c4233200000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b6040517f327493b10000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffff00000000000000000000000000000000918216600482015291166024820152604490fd5b82519067ffffffffffffffff82116101d75760c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08387860101890301126101d7576040519161310f836118bc565b60408187860101015167ffffffffffffffff81116101d75760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082848a890101018b0301126101d75760405190613166826118f4565b613178604082858b8a01010101612780565b825261318c606082858b8a01010101612780565b6020830152608081848a89010101015160078110156101d75760408301528588018301810160a0810151606084015260c001519067ffffffffffffffff82116101d75760406131e79260208d0192868c8b01010101016127ad565b6080820152835260608187860101015167ffffffffffffffff81116101d75781878601010160807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828b0301126101d75760405190613245826118a0565b604081015160058110156101d7578252613261606082016127ef565b60208301526080810151604083015260a08101519067ffffffffffffffff82116101d75760406132979260208d019201016127ad565b6060820152602084015260808187860101015167ffffffffffffffff81116101d7576132d090604060208b0191848a89010101016127ad565b6040840152838601810160a0810151606085015260c0015167ffffffffffffffff81116101d75761330e90604060208b0191848a89010101016127ad565b608084015260e0818786010101519167ffffffffffffffff83116101d75760409361334860209493868695868e01928c8b010101016127ad565b60a082015281520193019290506128da565b9060a06080612028937fffffffffffffffffffffffffffffffff0000000000000000000000000000000080825116855260208201511660208501526133a760408201516040860190611cfb565b6060810151606085015201519181608082015201906117b7565b9060806060612028936133d5848251611d37565b6020810151151560208501526040810151604085015201519181606082015201906117b7565b906002821015611d085752565b909161341261273c565b507fffffffffffffffffffffffffffffffff00000000000000000000000000000000928383511660075460801b9085821681036130655750506020830191848351168582168103613a9857505091929073ffffffffffffffffffffffffffffffffffffffff600654169260606040519586947f6e2ed8080000000000000000000000000000000000000000000000000000000086526040600487015260c48601948183511660448801525116606486015260408101516084860152015191608060a4850152825180915260e4840190602060e48260051b8701019401916000905b828210613a3557505050507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83830301602484015260408201908051916040845282518091526060840190602060608260051b8701019401916000905b8282106139d05750505050602001519160208183039101526020808351928381520192019060005b8181106139ad575050509181600081819503925af19081156101e45760009161359f575090565b903d908181843e6135b08284611910565b6020838381010312612ece5782519267ffffffffffffffff8411612eca5760c08482018483010312612eca57604051936135e9856118bc565b6135f4818301612780565b8552613604602082840101612780565b6020860152818101604081810151908701526060015167ffffffffffffffff8111612cd757848301601f8284860101011215612cd7578082840101519061364a826119d2565b916136586040519384611910565b808352602083019187860160208360051b83888a0101010111612dc9576020818688010101925b60208360051b83888a0101010184106138b0575050505060608601526080818301015167ffffffffffffffff8111612cd757848301601f8284860101011215612cd757808284010151906136d2826119d2565b916136e06040519384611910565b808352602083019187860160208360051b83888a0101010111612dc9576020818688010101925b60208360051b83888a0101010184106137ca5750505050608086015260a081830101519067ffffffffffffffff8211612cd757820101838201601f82011215612cd357805192613756846119d2565b946137646040519687611910565b84865260208087019560051b840101938181018511612cd35760208401955b858710613799575050505050505060a082015290565b865167ffffffffffffffff8111612726576020916137bf839283878701918a01016127ad565b815201960195613783565b835167ffffffffffffffff8111612dc55760a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082858a8c0101018c8b01030112612dc5576040519061381c826118f4565b602081858a8c01010101516005811015612dc1578252613844604082868b8d010101016127ef565b602083015288880184018101606081015160408401526080015167ffffffffffffffff8111612dc157926020939260a0859493878f8e6138948f92988a809a8401918787878701010101016127ad565b6060870152010101015160808201528152019401939050613707565b835167ffffffffffffffff8111612dc55760c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082858a8c0101018c8b01030112612dc55760405190613902826118bc565b613914602082868b8d01010101612780565b8252613928604082868b8d01010101612780565b6020830152606081858a8c01010101516007811015612dc1576040830152888801840181016080810151606084015260a0015167ffffffffffffffff8111612dc157926020939260c0859493878f8e6139918f92988a809a8401918787878701010101016127ad565b6080870152010101015160a0820152815201940193905061367f565b91935091602080826139c260019488516133fb565b019401910191859392613578565b9193948697506020613a23827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0600195979a8495030186528951906040612f57612f4784516060855260608501906133c1565b97019201920188969594939192613550565b9193946020613a87827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c600195979a849503018652895161300a612fee612fdc612fcc845160c080885287019061335a565b9701920192018795949391926134f3565b6040517fc8c423320000000000000000000000000000000000000000000000000000000081527fffffffffffffffffffffffffffffffff00000000000000000000000000000000918216600482015291166024820152604490fd5b6040908151613b01816118d8565b80926008918254613b11816119d2565b92613b1e81519485611910565b81845260008581526020949092837ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee38784015b8383106142da57505050508352838151918296879383600954918281520192600987527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af96905b82601f83011061405e578590613cb5985494848410614042575b848410614023575b50838310614004575b838310613fe5575b838310613fc7575b838310613fa8575b838310613f89575b838310613f6a575b838310613f4d575b50828210613f30575b828210613f13575b828210613ef6575b828210613ed9575b828210613ebc575b828210613e9f575b828210613e82575b828210613e65575b828210613e48575b828210613e2b575b828210613e0e575b828210613df1575b828210613dd4575b828210613db7575b828210613d9a575b828210613d7d575b828210613d60575b828210613d43575b828210613d26575b828210613d09575b828210613cec575b828210613ccf575b5010613cb9575b5090500384611910565b0152565b81613cc69160f81c6133fb565b01849038613cab565b84613ce36001939660ff8760f01c166133fb565b01930184613ca4565b84613d006001939660ff8760e81c166133fb565b01930184613c9c565b84613d1d6001939660ff8760e01c166133fb565b01930184613c94565b84613d3a6001939660ff8760d81c166133fb565b01930184613c8c565b84613d576001939660ff8760d01c166133fb565b01930184613c84565b84613d746001939660ff8760c81c166133fb565b01930184613c7c565b84613d916001939660ff8760c01c166133fb565b01930184613c74565b84613dae6001939660ff8760b81c166133fb565b01930184613c6c565b84613dcb6001939660ff8760b01c166133fb565b01930184613c64565b84613de86001939660ff8760a81c166133fb565b01930184613c5c565b84613e056001939660ff8760a01c166133fb565b01930184613c54565b84613e226001939660ff8760981c166133fb565b01930184613c4c565b84613e3f6001939660ff8760901c166133fb565b01930184613c44565b84613e5c6001939660ff8760881c166133fb565b01930184613c3c565b84613e796001939660ff8760801c166133fb565b01930184613c34565b84613e966001939660ff8760781c166133fb565b01930184613c2c565b84613eb36001939660ff8760701c166133fb565b01930184613c24565b84613ed06001939660ff8760681c166133fb565b01930184613c1c565b84613eed6001939660ff8760601c166133fb565b01930184613c14565b84613f0a6001939660ff8760581c166133fb565b01930184613c0c565b84613f276001939660ff8760501c166133fb565b01930184613c04565b84613f446001939660ff8760481c166133fb565b01930184613bfc565b94613f608160ff87600196991c166133fb565b0193018438613bf3565b91948181613f8060019360ff8960381c166133fb565b01950191613beb565b91948181613f9f60019360ff8960301c166133fb565b01950191613be3565b91948181613fbe60019360ff8960281c166133fb565b01950191613bdb565b91948181613fdc60019360ff89851c166133fb565b01950191613bd3565b91948181613ffb60019360ff8960181c166133fb565b01950191613bcb565b9194818161401a60019360ff8960101c166133fb565b01950191613bc3565b86614038600193959860ff8987951c166133fb565b0195019138613bba565b9295828161405560019360ff8a166133fb565b01960192613bb2565b92955092610400816142c76140a96142b98a61429661412561424e8f6142068f9c9f9b6141be8f939d60019e549a8b9961409c8560ff809d166133fb565b8a8d848701921c166133fb565b6140ba8584018a8d60101c166133fb565b888b6102006060956140d3878201858560181c166133fb565b6140e66080958585888501921c166133fb565b61417c60a0976140fd898401878760281c166133fb565b61413460c09b6141148d8601898960301c166133fb565b60e09e8f8601898960381c166133fb565b87876101008701921c166133fb565b6141476101208401878760481c166133fb565b61415a6101408401878760501c166133fb565b61416d6101608401878760581c166133fb565b85856101808501921c166133fb565b61418f6101a08201858560681c166133fb565b6141a26101c08201858560701c166133fb565b6141b56101e08201858560781c166133fb565b01921c166133fb565b6141d16102208c01888b60881c166133fb565b6141e46102408c01888b60901c166133fb565b6141f76102608c01888b60981c166133fb565b86896102808d01921c166133fb565b6142196102a08a01868960a81c166133fb565b61422c6102c08a01868960b01c166133fb565b61423f6102e08a01868960b81c166133fb565b84876103008b01921c166133fb565b6142616103208801848760c81c166133fb565b6142746103408801848760d01c166133fb565b6142876103608801848760d81c166133fb565b82856103808901921c166133fb565b6142a96103a08601828560e81c166133fb565b6103c08501908360f01c166133fb565b6103e083019060f81c6133fb565b0196019201928793899592969396613b98565b859699955160608082019067ffffffffffffffff838310818411176144e75760e08401838110828211176144ba578b52855460ff93600592918581168481101561448a579160028f8f969461435761435e928b8f93978e9c9a98885260809b1c1615158a8c0152600183015460a0809c015251809481930161207e565b0382611910565b60c089015287528d519485019081118582101761445b578f908e5260038901547fffffffffffffffffffffffffffffffff00000000000000000000000000000000908181871b16875216908501526004948589015416600795868210156144275750948f959460068f958f99968c6143f6826143579960019f9c996144119a6143fd968a01528401549088015251809581930161207e565b0383611910565b820152868501528d51928380928b0161207e565b8b82015281520192019201919098959498613b51565b9150508f925060249350602191507f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b505060248f7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b50505060248f7f4e487b710000000000000000000000000000000000000000000000000000000081526021600452fd5b60248f7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b60248e7f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b8051156145215760200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b908160209103126101d7575173ffffffffffffffffffffffffffffffffffffffff811681036101d75790565b1561458357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152fdfea2646970667358221220caedf233f5a8b0300b4a16c7ebd99c849096cbb2fc17bf8dc8216c3c8f8064c764736f6c63430008110033",
    "sourceMap": "202:1811:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:39:34;202:1811:37;2996:18:34;202:1811:37;;;;2996:39:34;;;;202:1811:37;2996:39:34;;;;;;;;202:1811:37;2996:39:34;;;202:1811:37;2996:39:34;202:1811:37;;;;;;;2996:39:34;;;;;;;;;;;;;;;;:::i;:::-;;;202:1811:37;;;;2996:39:34;202:1811:37;;2996:39:34;;202:1811:37;;;;2996:39:34;;;-1:-1:-1;2996:39:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;4508:18:18;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;1463:36:34;1459:100;;202:1811:37;;1613:57:34;;202:1811:37;1613:57:34;202:1811:37;;;;;;1613:57:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1613:57:34;202:1811:37;;;:::i;:::-;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;1613:57:34;;;202:1811:37;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1613:57:34;202:1811:37;;1613:57:34;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:61:34;202:1811:37;;;;;;;;1687:61:34;:::i;:::-;202:1811:37;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;;;;202:1811:37;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;;;;202:1811:37;;;;;;;;;;:::i;:::-;;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;1613:57:34;;;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;1613:57:34;;;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;1613:57:34;;;;;;;;;202:1811:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1459:100:34;202:1811:37;;;1522:26:34;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;1957:85:34;202:1811:37;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;1957:85:34;:::i;:::-;202:1811:37;1213:40;:37;202:1811;1121:64;1132:41;:38;;;;:41;:::i;:::-;;202:1811;;;;1121:64;;;;;;:::i;:::-;202:1811;1213:37;;;:40;:::i;:::-;;:47;202:1811;9170:16:18;;;202:1811:37;;9876:7:18;9242:16;9233:58;9242:16;;-1:-1:-1;202:1811:37;6930:7:18;202:1811:37;;;;-1:-1:-1;202:1811:37;;;7344:31:18;;7256:126;;9242:16;9241:17;9233:58;:::i;:::-;9437;9446:16;;-1:-1:-1;202:1811:37;6930:7:18;202:1811:37;;;;-1:-1:-1;202:1811:37;;;7344:31:18;;7256:126;;9437:58;202:1811:37;;;9837:9:18;202:1811:37;;;;;9854:1:18;202:1811:37;;;;;;;;;;;;;;;;;;;;;9913:33:18;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1845:13;202:1811;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;1845:13;202:1811;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;719:10:23;;;13216:17:18;202:1811:37;;719:10:23;202:1811:37;;13273:18:18;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;13334:41:18;202:1811:37;719:10:23;13334:41:18;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2721:7:18;202:1811:37;;;;;;:::i;:::-;;;;;;;;;2721:7:18;;;;202:1811:37;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;202:1811:37;;;;;;;-1:-1:-1;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;2239:85:34;202:1811:37;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;2239:85:34;:::i;202:1811:37:-;;;;;;;;;;;;;;661:1:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;854:20:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1957:85:34;202:1811:37;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;2028:19:18;;202:1811:37;;;;2110:9:18;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:85:34;202:1811:37;1724:7;202:1811;;;;;;:::i;1957:85:34:-;202:1811:37;1605:40;:37;202:1811;1513:64;1524:41;:38;;;;:41;:::i;:::-;;202:1811;;;;1513:64;;;;;;:::i;1605:40::-;;:47;202:1811;1677:16;;;;:::i;:::-;1724:7;:::i;202:1811::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5137:39:18;202:1811:37;;;;;;5137:39:18;:::i;202:1811:37:-;;;;;;;;;;;;;;4923:7:18;202:1811:37;;;:::i;:::-;719:10:23;4793:99:18;4801:41;719:10:23;;4801:41:18;:::i;:::-;4793:99;:::i;202:1811:37:-;;;;;;;;;;;;;:::i;:::-;;;;;3564:23:18;;;;;:::i;:::-;202:1811:37;;;3605:11:18;;;;202:1811:37;;719:10:23;;3686:21:18;:62;;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;12895:23:18;;;:::i;:::-;202:1811:37;12886:46:18;202:1811:37;12886:46:18;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3686:62:18;202:1811:37;;;;4508:18:18;202:1811:37;;;;;719:10:23;202:1811:37;;;;;;;;;;3686:62:18;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;202:1811:37;;;;;;;-1:-1:-1;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:127:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;1707:40:18;1722:25;202:1811:37;1707:40:18;;:104;;;;;202:1811:37;1707:156:18;;;;202:1811:37;;;;;;;1707:156:18;952:25:25;937:40;;;1707:156:18;;;:104;1778:33;1763:48;;;-1:-1:-1;1707:104:18;;202:1811:37;;;;;;;;-1:-1:-1;;202:1811:37;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;202:1811:37;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;2190:219:18;-1:-1:-1;202:1811:37;6930:7:18;202:1811:37;;;;-1:-1:-1;202:1811:37;;;2324:56:18;2332:19;;;2324:56;:::i;:::-;2190:219;:::o;202:1811:37:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;202:1811:37;;;;-1:-1:-1;202:1811:37;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3935:167:18;13539:53;13547:16;;-1:-1:-1;202:1811:37;6930:7:18;202:1811:37;;;;-1:-1:-1;202:1811:37;;;7344:31:18;;7256:126;;13547:16;13539:53;:::i;:::-;-1:-1:-1;202:1811:37;4071:15:18;202:1811:37;;;;-1:-1:-1;202:1811:37;;;3935:167:18;:::o;202:1811:37:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5249:314:18;;6620:47;5249:314;;;5409:99;5417:41;719:10:23;;5417:41:18;:::i;5409:99::-;6594:7;;;;;:::i;:::-;6620:47;:::i;:::-;202:1811:37;;;5249:314:18:o;202:1811:37:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7540:261:18;;202:1811:37;7665:23:18;;;;;:::i;:::-;202:1811:37;;;7706:16:18;;;;:52;;;;;7540:261;7706:87;;;;;7540:261;7698:96;;;7540:261;:::o;7706:87::-;7762:20;;;;;;:::i;:::-;202:1811:37;7762:31:18;7706:87;;;;;:52;202:1811:37;;;-1:-1:-1;202:1811:37;4508:18:18;202:1811:37;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;;-1:-1:-1;202:1811:37;;;7706:52:18;;;;202:1811:37;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;11423:1233:18;;11542:81;11423:1233;11550:23;;;:::i;:::-;202:1811:37;;;;;;;;;;;;;11550:31:18;11542:81;:::i;:::-;202:1811:37;11641:16:18;;;202:1811:37;;11851:23:18;11843:81;11851:23;;;;:::i;:::-;202:1811:37;11851:31:18;11843:81;:::i;:::-;12570:27;11655:1;202:1811:37;;;11993:15:18;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12480:1:18;202:1811:37;;;;;;;;12533:7:18;202:1811:37;;;;;;;;;;;;;12570:27:18;;11423:1233::o;202:1811:37:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;14151:831:18;;;202:1811:37;;14151:831:18;;;1465:19:22;;:23;:19;;202:1811:37;;;;;;;;;;;;14355:71:18;;;;719:10:23;14355:71:18;;;202:1811:37;;;;;;;;;;;;;;;;;;14355:71:18;;202:1811:37;;;;;;;;:::i;:::-;14355:71:18;202:1811:37;;14355:71:18;;;;;;;14316:660;-1:-1:-1;14351:573:18;;14543:381;;;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;14593:18:18;;;202:1811:37;;14635:60:18;;;202:1811:37;14355:71:18;14635:60;;202:1811:37;;;;;;;;;;;;;;;;;;;14589:321:18;14797:95;;202:1811:37;;;;;14351:573:18;202:1811:37;;14476:51:18;;-1:-1:-1;202:1811:37;-1:-1:-1;14469:58:18:o;14355:71::-;;;;;;;;;;;;;;;;;:::i;:::-;;;202:1811:37;;;;;;;;;;;;14355:71:18;;;;202:1811:37;;;;14355:71:18;;;;;14316:660;14954:11;;;;;;14961:4;14954:11;:::o;202:1811:37:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:1811:37;;-1:-1:-1;202:1811:37;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;1241:514:34:-;;202:1811:37;;:::i;:::-;;;;1463:36:34;1459:100;;202:1811:37;;1613:57:34;;202:1811:37;1613:57:34;202:1811:37;;;;;;1613:57:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1613:57:34;202:1811:37;;;:::i;:::-;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;1613:57:34;;;202:1811:37;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1613:57:34;202:1811:37;;1613:57:34;;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2564:32:34;;2560:115;;202:1811:37;;;1613:57:34;202:1811:37;;;;;2689:40:34;;;2685:135;;202:1811:37;;;;;;;2836:18:34;202:1811:37;;;;;2836:69:34;;;202:1811:37;2836:69:34;;;;;;202:1811:37;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;1613:57:34;202:1811:37;;;1613:57:34;202:1811:37;;;;;;1613:57:34;202:1811:37;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;2836:69:34;;;;;-1:-1:-1;2836:69:34;;;;;;;;;;;;-1:-1:-1;2836:69:34;;;1680:68;1241:514;:::o;2836:69::-;;;;;;;;;;;;:::i;:::-;1613:57;2836:69;;;;202:1811:37;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;1613:57:34;202:1811:37;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1613:57:34;202:1811:37;;2836:69:34;;;;1613:57;202:1811:37;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1613:57:34;202:1811:37;;2836:69:34;;;;1613:57;202:1811:37;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1613:57:34;202:1811:37;;;;;;;;;2836:69:34;;;;202:1811:37;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;1241:514:34;:::o;202:1811:37:-;;;;;;;;1613:57:34;2836:69;202:1811:37;2836:69:34;;;;;;202:1811:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;1613:57;2836:69;;202:1811:37;2836:69:34;;;;;;202:1811:37;2836:69:34;;;;;;;;202:1811:37;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;:::i;:::-;;1613:57:34;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;1613:57;2836:69;;202:1811:37;2836:69:34;;;;;;202:1811:37;2836:69:34;;;;;;;;202:1811:37;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2685:135:34;202:1811:37;;;;;2752:57:34;;;;;;;202:1811:37;;;;;2752:57:34;2560:115;202:1811:37;;2619:45:34;;;202:1811:37;;;;2619:45:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;;;;202:1811:37;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;;;;202:1811:37;;;;:::i;:::-;;;;;1613:57:34;202:1811:37;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;1613:57:34;;;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;1613:57:34;;;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1613:57:34;202:1811:37;1613:57:34;;;;;;;;;202:1811:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;2337:575:34:-;;;202:1811:37;;:::i;:::-;;;;;;;;2591:5:34;202:1811:37;;;;;;;2564:32:34;;2560:115;;2689:27;;;;;202:1811:37;;;;;;;;2689:40:34;;2685:135;;202:1811:37;;;;;;2836:18:34;202:1811:37;;;;;;2836:69:34;;;202:1811:37;2836:69:34;;202:1811:37;2836:69:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:27:34;202:1811:37;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:27:34;202:1811:37;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;;;;;;2689:27:34;202:1811:37;;;2689:27:34;202:1811:37;;;;;;2689:27:34;202:1811:37;;;;;;;;;;;-1:-1:-1;202:1811:37;;;;;;2836:69:34;;;;;-1:-1:-1;2836:69:34;;;;;;;;;;;;-1:-1:-1;2836:69:34;;;2829:76;2337:575;:::o;2836:69::-;;;;;;;;;;;;:::i;:::-;2689:27;2836:69;;;;202:1811:37;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;2689:27:34;202:1811:37;;;;;:::i;:::-;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2689:27:34;202:1811:37;;2836:69:34;;;;2689:27;202:1811:37;;;;;;;;;;;;;2689:27:34;202:1811:37;;;;;;;;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2689:27:34;202:1811:37;;2836:69:34;;;;2689:27;202:1811:37;;;;;;;;;;;;;2689:27:34;202:1811:37;;;;;;;;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2689:27:34;202:1811:37;;;;;;;;;2836:69:34;;;;202:1811:37;;;;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;2337:575:34;:::o;202:1811:37:-;;;;;;;;2689:27:34;2836:69;202:1811:37;2836:69:34;;;;;;202:1811:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;:::i;:::-;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;2689:27;2836:69;;202:1811:37;2836:69:34;;;;;;202:1811:37;2836:69:34;;;;;;;;202:1811:37;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;;;202:1811:37;;;;;;;;;;;:::i;:::-;;2689:27:34;202:1811:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2689:27:34;202:1811:37;;;;;;;;;;;;;2591:5:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:69:34;2689:27;2836:69;;202:1811:37;2836:69:34;;;;;;202:1811:37;2836:69:34;;;;;;;;202:1811:37;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2689:27:34;202:1811:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2689:27:34;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2685:135:34;202:1811:37;;2752:57:34;;;202:1811:37;;;;2752:57:34;;;202:1811:37;;;;;;;;;;;;;;;;;;:::i;:::-;;1465:23;;202:1811;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;202:1811:37;;;;;-1:-1:-1;;;202:1811:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "32922": [
        {
          "start": 5763,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADDRESSES_PROVIDER()": "0542975c",
    "ZK_CONNECT_LIB_VERSION()": "86e01f78",
    "appId()": "80afdea8",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "claimWithZkConnect(bytes)": "d3b12a37",
    "getApproved(uint256)": "081812fc",
    "getZkConnectVersion()": "ef19bc46",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferWithZkConnect(bytes)": "5f64d5f4",
    "verify((bytes16,bytes16,bytes32,((bytes16,bytes16,uint8,uint256,bytes),(uint8,bool,uint256,bytes),bytes,bytes32,bytes,bytes)[]),(((uint8,bool,uint256,bytes),(bytes16,bytes16,uint8,uint256,bytes),bytes)[],uint8[]),bytes16)": "8407c1d6",
    "verify(bytes)": "8e760afe",
    "verify(bytes,(((uint8,bool,uint256,bytes),(bytes16,bytes16,uint8,uint256,bytes),bytes)[],uint8[]))": "790fb2df",
    "verify(bytes,(((uint8,bool,uint256,bytes),(bytes16,bytes16,uint8,uint256,bytes),bytes)[],uint8[]),bytes16)": "deff7b52"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"},{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"receivedAppId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"expectedAppId\",\"type\":\"bytes16\"}],\"name\":\"AppIdMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"receivedNamespace\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"expectedNamespace\",\"type\":\"bytes16\"}],\"name\":\"NamespaceMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZkConnectResponseIsEmpty\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"name\":\"BaseTokenURIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZK_CONNECT_LIB_VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"appId\",\"outputs\":[{\"internalType\":\"bytes16\",\"name\":\"\",\"type\":\"bytes16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"zkConnectResponse\",\"type\":\"bytes\"}],\"name\":\"claimWithZkConnect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZkConnectVersion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"zkConnectResponse\",\"type\":\"bytes\"}],\"name\":\"transferWithZkConnect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"zkConnectResponseEncoded\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Auth\",\"name\":\"authRequest\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Claim\",\"name\":\"claimRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageSignatureRequest\",\"type\":\"bytes\"}],\"internalType\":\"struct DataRequest[]\",\"name\":\"dataRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"enum LogicalOperator[]\",\"name\":\"operators\",\"type\":\"uint8[]\"}],\"internalType\":\"struct ZkConnectRequestContent\",\"name\":\"zkConnectRequestContent\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"namespace\",\"type\":\"bytes16\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedClaim[]\",\"name\":\"verifiedClaims\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedAuth[]\",\"name\":\"verifiedAuths\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signedMessages\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ZkConnectVerifiedResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"namespace\",\"type\":\"bytes16\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Claim\",\"name\":\"claim\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Auth\",\"name\":\"auth\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signedMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"provingScheme\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proofData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ZkConnectProof[]\",\"name\":\"proofs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ZkConnectResponse\",\"name\":\"zkConnectResponse\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Auth\",\"name\":\"authRequest\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Claim\",\"name\":\"claimRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageSignatureRequest\",\"type\":\"bytes\"}],\"internalType\":\"struct DataRequest[]\",\"name\":\"dataRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"enum LogicalOperator[]\",\"name\":\"operators\",\"type\":\"uint8[]\"}],\"internalType\":\"struct ZkConnectRequestContent\",\"name\":\"zkConnectRequestContent\",\"type\":\"tuple\"},{\"internalType\":\"bytes16\",\"name\":\"namespace\",\"type\":\"bytes16\"}],\"name\":\"verify\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"namespace\",\"type\":\"bytes16\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedClaim[]\",\"name\":\"verifiedClaims\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedAuth[]\",\"name\":\"verifiedAuths\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signedMessages\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ZkConnectVerifiedResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"zkConnectResponseEncoded\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"namespace\",\"type\":\"bytes16\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedClaim[]\",\"name\":\"verifiedClaims\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedAuth[]\",\"name\":\"verifiedAuths\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signedMessages\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ZkConnectVerifiedResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"zkConnectResponseEncoded\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Auth\",\"name\":\"authRequest\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Claim\",\"name\":\"claimRequest\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageSignatureRequest\",\"type\":\"bytes\"}],\"internalType\":\"struct DataRequest[]\",\"name\":\"dataRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"enum LogicalOperator[]\",\"name\":\"operators\",\"type\":\"uint8[]\"}],\"internalType\":\"struct ZkConnectRequestContent\",\"name\":\"zkConnectRequestContent\",\"type\":\"tuple\"},{\"internalType\":\"bytes16\",\"name\":\"namespace\",\"type\":\"bytes16\"}],\"name\":\"verify\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"namespace\",\"type\":\"bytes16\"},{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedClaim[]\",\"name\":\"verifiedClaims\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"anonMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiedAuth[]\",\"name\":\"verifiedAuths\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signedMessages\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ZkConnectVerifiedResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZKDropERC721.sol\":\"ZKDropERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@sismo-core/hydra-s2/=lib/zk-connect-onchain-verifier/lib/hydra-s2-zkps/package/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hydra-s2-zkps/=lib/zk-connect-onchain-verifier/lib/hydra-s2-zkps/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":zk-connect-onchain-verifier/=lib/zk-connect-onchain-verifier/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/zk-connect-onchain-verifier/src/libs/zk-connect/ZkConnectLib.sol\":{\"keccak256\":\"0x26042227afba1d6c7f1ad5d4c7036b2c2157d6a714d4e28dc46decbf71f05125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c361812f22170b784115ed4e184ebf38e6a6d444a66db599dfe15abb6e238005\",\"dweb:/ipfs/QmYhnnrjqWxgQVgZJNSXfL6p5jRi43ugAwCCrrPfqmvytd\"]},\"src/ZKDropERC721.sol\":{\"keccak256\":\"0x8f47fdc68817162a540b5f2213f0641084aae9a7d8e636eefb01270be59f5870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7f87b1c721964973777a345143616eb7721ec45b7a1319d918ad8ed07e2e66\",\"dweb:/ipfs/QmV87t8wsihcmgRTWppfdFt4dSQbokq6bauHgX3Ue69APB\"]},\"src/interfaces/IZkConnectVerifier.sol\":{\"keccak256\":\"0x765b1ba2405313db7a2c76b3362b9c9386081845e3ad046e25a8611c76ecd586\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21d7df25d1cf2875f4572396c850437557686ff5026978f2a0af95833d93f7c3\",\"dweb:/ipfs/QmcCUHa1aXPLekiFftDMymh6YVHjBt8Z45rC2TRpZXc2fK\"]},\"src/libs/utils/AuthRequestLib.sol\":{\"keccak256\":\"0xa3cd5bd1c768e3d87c226d1933a7de85aaaa212bb5332e0878b0a987e29e29be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://400f75d39a5985516a1d419e07f289faaa41ac5e061639e92f340a7f0c12ec89\",\"dweb:/ipfs/QmQ7fj63veiR9vMSTM9Yz9S17wN9zvfkaLy6jJz43mDxae\"]},\"src/libs/utils/ClaimRequestLib.sol\":{\"keccak256\":\"0xcddfc9da7293f2af9855768683b1dc22a4b110446e8bf615e024e421d873ebc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d321ea707feb10e679f4b42080536c9031ab540a72bea5b55e9211dd42318da1\",\"dweb:/ipfs/QmVoXGQ4EDphecWqXNbkW591ZQKboMih4GiXfjSHJtqBg6\"]},\"src/libs/utils/DataRequestLib.sol\":{\"keccak256\":\"0x6cc5581c37faa21d59cfc29025139594a04c720021c175c6928046ac921b9ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382286f566a4916c12a5f736e3a41f94010f142729c86b8e91b85bc8b83684d5\",\"dweb:/ipfs/QmVYdYowAdi4wvkfM1JrSkavs8gVTthMFDPrKKmdaWg9SA\"]},\"src/libs/utils/Struct.sol\":{\"keccak256\":\"0x39e9676af77c55d0514f11a46829e8dd51ad715ff1d7391ba9a2e945517d50f8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://77a186682bd735ee43d57b60bca263e2daf0ce5b2b8ce24ce20fcc968a4d0ee2\",\"dweb:/ipfs/QmSiKj88gNCDNmwxhSECBB8neGQh1gaJYxQMbtRTeym2Ln\"]},\"src/libs/utils/ZkConnectRequestContentLib.sol\":{\"keccak256\":\"0xad2ab8912d0ee040adff033e3918f59e8f26dd65ae182f6d6f389dca1de60144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9c57ebe1d1ee79325a3eed5153723d919e88bf18f592dc852749b99d2e52614\",\"dweb:/ipfs/QmSkmchfrbuwm9AFwjzQvLHkFk2qZbE85nDVRYPRp84irM\"]},\"src/periphery/interfaces/IAddressesProvider.sol\":{\"keccak256\":\"0x185345ebfd2560bc0cd5271fa558523736a7f8e250e38a2f06f5a4e94c9efce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://983ea0844f7f6ad961b6f6a779f056b226cf5ab6965797ab26652b68655b33de\",\"dweb:/ipfs/QmTaYBKcACxLtFBqLqQhvuw8pp19z5WEvMHQaztUtdCBT8\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "baseTokenURI",
              "type": "string"
            },
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "groupId",
              "type": "bytes16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes16",
              "name": "receivedAppId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "expectedAppId",
              "type": "bytes16"
            }
          ],
          "type": "error",
          "name": "AppIdMismatch"
        },
        {
          "inputs": [
            {
              "internalType": "bytes16",
              "name": "receivedNamespace",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "expectedNamespace",
              "type": "bytes16"
            }
          ],
          "type": "error",
          "name": "NamespaceMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZkConnectResponseIsEmpty"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseTokenURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BaseTokenURIChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADDRESSES_PROVIDER",
          "outputs": [
            {
              "internalType": "contract IAddressesProvider",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ZK_CONNECT_LIB_VERSION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "appId",
          "outputs": [
            {
              "internalType": "bytes16",
              "name": "",
              "type": "bytes16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "zkConnectResponse",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimWithZkConnect"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getZkConnectVersion",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "zkConnectResponse",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferWithZkConnect"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "zkConnectResponseEncoded",
              "type": "bytes"
            },
            {
              "internalType": "struct ZkConnectRequestContent",
              "name": "zkConnectRequestContent",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataRequest[]",
                  "name": "dataRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Auth",
                      "name": "authRequest",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "enum AuthType",
                          "name": "authType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bool",
                          "name": "anonMode",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "userId",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "struct Claim",
                      "name": "claimRequest",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes16",
                          "name": "groupId",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "bytes16",
                          "name": "groupTimestamp",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "enum ClaimType",
                          "name": "claimType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "messageSignatureRequest",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "enum LogicalOperator[]",
                  "name": "operators",
                  "type": "uint8[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "struct ZkConnectVerifiedResult",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "namespace",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes32",
                  "name": "version",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct VerifiedClaim[]",
                  "name": "verifiedClaims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct VerifiedAuth[]",
                  "name": "verifiedAuths",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes[]",
                  "name": "signedMessages",
                  "type": "bytes[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ZkConnectResponse",
              "name": "zkConnectResponse",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "namespace",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes32",
                  "name": "version",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct ZkConnectProof[]",
                  "name": "proofs",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Claim",
                      "name": "claim",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes16",
                          "name": "groupId",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "bytes16",
                          "name": "groupTimestamp",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "enum ClaimType",
                          "name": "claimType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "struct Auth",
                      "name": "auth",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "enum AuthType",
                          "name": "authType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bool",
                          "name": "anonMode",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "userId",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "signedMessage",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "provingScheme",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "proofData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct ZkConnectRequestContent",
              "name": "zkConnectRequestContent",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataRequest[]",
                  "name": "dataRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Auth",
                      "name": "authRequest",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "enum AuthType",
                          "name": "authType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bool",
                          "name": "anonMode",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "userId",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "struct Claim",
                      "name": "claimRequest",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes16",
                          "name": "groupId",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "bytes16",
                          "name": "groupTimestamp",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "enum ClaimType",
                          "name": "claimType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "messageSignatureRequest",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "enum LogicalOperator[]",
                  "name": "operators",
                  "type": "uint8[]"
                }
              ]
            },
            {
              "internalType": "bytes16",
              "name": "namespace",
              "type": "bytes16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "struct ZkConnectVerifiedResult",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "namespace",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes32",
                  "name": "version",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct VerifiedClaim[]",
                  "name": "verifiedClaims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct VerifiedAuth[]",
                  "name": "verifiedAuths",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes[]",
                  "name": "signedMessages",
                  "type": "bytes[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "zkConnectResponseEncoded",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "struct ZkConnectVerifiedResult",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "namespace",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes32",
                  "name": "version",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct VerifiedClaim[]",
                  "name": "verifiedClaims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct VerifiedAuth[]",
                  "name": "verifiedAuths",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes[]",
                  "name": "signedMessages",
                  "type": "bytes[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "zkConnectResponseEncoded",
              "type": "bytes"
            },
            {
              "internalType": "struct ZkConnectRequestContent",
              "name": "zkConnectRequestContent",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DataRequest[]",
                  "name": "dataRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct Auth",
                      "name": "authRequest",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "enum AuthType",
                          "name": "authType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "bool",
                          "name": "anonMode",
                          "type": "bool"
                        },
                        {
                          "internalType": "uint256",
                          "name": "userId",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "struct Claim",
                      "name": "claimRequest",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bytes16",
                          "name": "groupId",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "bytes16",
                          "name": "groupTimestamp",
                          "type": "bytes16"
                        },
                        {
                          "internalType": "enum ClaimType",
                          "name": "claimType",
                          "type": "uint8"
                        },
                        {
                          "internalType": "uint256",
                          "name": "value",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "extraData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "bytes",
                      "name": "messageSignatureRequest",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "enum LogicalOperator[]",
                  "name": "operators",
                  "type": "uint8[]"
                }
              ]
            },
            {
              "internalType": "bytes16",
              "name": "namespace",
              "type": "bytes16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "struct ZkConnectVerifiedResult",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "namespace",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes32",
                  "name": "version",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct VerifiedClaim[]",
                  "name": "verifiedClaims",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct VerifiedAuth[]",
                  "name": "verifiedAuths",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bool",
                      "name": "anonMode",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "proofId",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bytes[]",
                  "name": "signedMessages",
                  "type": "bytes[]"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@sismo-core/hydra-s2/=lib/zk-connect-onchain-verifier/lib/hydra-s2-zkps/package/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hydra-s2-zkps/=lib/zk-connect-onchain-verifier/lib/hydra-s2-zkps/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":zk-connect-onchain-verifier/=lib/zk-connect-onchain-verifier/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ZKDropERC721.sol": "ZKDropERC721"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/zk-connect-onchain-verifier/src/libs/zk-connect/ZkConnectLib.sol": {
        "keccak256": "0x26042227afba1d6c7f1ad5d4c7036b2c2157d6a714d4e28dc46decbf71f05125",
        "urls": [
          "bzz-raw://c361812f22170b784115ed4e184ebf38e6a6d444a66db599dfe15abb6e238005",
          "dweb:/ipfs/QmYhnnrjqWxgQVgZJNSXfL6p5jRi43ugAwCCrrPfqmvytd"
        ],
        "license": "MIT"
      },
      "src/ZKDropERC721.sol": {
        "keccak256": "0x8f47fdc68817162a540b5f2213f0641084aae9a7d8e636eefb01270be59f5870",
        "urls": [
          "bzz-raw://dd7f87b1c721964973777a345143616eb7721ec45b7a1319d918ad8ed07e2e66",
          "dweb:/ipfs/QmV87t8wsihcmgRTWppfdFt4dSQbokq6bauHgX3Ue69APB"
        ],
        "license": "MIT"
      },
      "src/interfaces/IZkConnectVerifier.sol": {
        "keccak256": "0x765b1ba2405313db7a2c76b3362b9c9386081845e3ad046e25a8611c76ecd586",
        "urls": [
          "bzz-raw://21d7df25d1cf2875f4572396c850437557686ff5026978f2a0af95833d93f7c3",
          "dweb:/ipfs/QmcCUHa1aXPLekiFftDMymh6YVHjBt8Z45rC2TRpZXc2fK"
        ],
        "license": "MIT"
      },
      "src/libs/utils/AuthRequestLib.sol": {
        "keccak256": "0xa3cd5bd1c768e3d87c226d1933a7de85aaaa212bb5332e0878b0a987e29e29be",
        "urls": [
          "bzz-raw://400f75d39a5985516a1d419e07f289faaa41ac5e061639e92f340a7f0c12ec89",
          "dweb:/ipfs/QmQ7fj63veiR9vMSTM9Yz9S17wN9zvfkaLy6jJz43mDxae"
        ],
        "license": "MIT"
      },
      "src/libs/utils/ClaimRequestLib.sol": {
        "keccak256": "0xcddfc9da7293f2af9855768683b1dc22a4b110446e8bf615e024e421d873ebc8",
        "urls": [
          "bzz-raw://d321ea707feb10e679f4b42080536c9031ab540a72bea5b55e9211dd42318da1",
          "dweb:/ipfs/QmVoXGQ4EDphecWqXNbkW591ZQKboMih4GiXfjSHJtqBg6"
        ],
        "license": "MIT"
      },
      "src/libs/utils/DataRequestLib.sol": {
        "keccak256": "0x6cc5581c37faa21d59cfc29025139594a04c720021c175c6928046ac921b9ee6",
        "urls": [
          "bzz-raw://382286f566a4916c12a5f736e3a41f94010f142729c86b8e91b85bc8b83684d5",
          "dweb:/ipfs/QmVYdYowAdi4wvkfM1JrSkavs8gVTthMFDPrKKmdaWg9SA"
        ],
        "license": "MIT"
      },
      "src/libs/utils/Struct.sol": {
        "keccak256": "0x39e9676af77c55d0514f11a46829e8dd51ad715ff1d7391ba9a2e945517d50f8",
        "urls": [
          "bzz-raw://77a186682bd735ee43d57b60bca263e2daf0ce5b2b8ce24ce20fcc968a4d0ee2",
          "dweb:/ipfs/QmSiKj88gNCDNmwxhSECBB8neGQh1gaJYxQMbtRTeym2Ln"
        ],
        "license": "Unlicense"
      },
      "src/libs/utils/ZkConnectRequestContentLib.sol": {
        "keccak256": "0xad2ab8912d0ee040adff033e3918f59e8f26dd65ae182f6d6f389dca1de60144",
        "urls": [
          "bzz-raw://d9c57ebe1d1ee79325a3eed5153723d919e88bf18f592dc852749b99d2e52614",
          "dweb:/ipfs/QmSkmchfrbuwm9AFwjzQvLHkFk2qZbE85nDVRYPRp84irM"
        ],
        "license": "MIT"
      },
      "src/periphery/interfaces/IAddressesProvider.sol": {
        "keccak256": "0x185345ebfd2560bc0cd5271fa558523736a7f8e250e38a2f06f5a4e94c9efce1",
        "urls": [
          "bzz-raw://983ea0844f7f6ad961b6f6a779f056b226cf5ab6965797ab26652b68655b33de",
          "dweb:/ipfs/QmTaYBKcACxLtFBqLqQhvuw8pp19z5WEvMHQaztUtdCBT8"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ZKDropERC721.sol",
    "id": 33408,
    "exportedSymbols": {
      "Auth": [
        33497
      ],
      "AuthRequestLib": [
        33796
      ],
      "AuthType": [
        33511
      ],
      "Claim": [
        33487
      ],
      "ClaimRequestLib": [
        34312
      ],
      "ClaimType": [
        33505
      ],
      "Context": [
        29865
      ],
      "DataRequest": [
        33475
      ],
      "DataRequestLib": [
        34471
      ],
      "ERC721": [
        29352
      ],
      "IAddressesProvider": [
        35479
      ],
      "IZkConnectVerifier": [
        34333
      ],
      "LogicalOperator": [
        33514
      ],
      "VerifiedAuth": [
        33584
      ],
      "VerifiedClaim": [
        33572
      ],
      "ZKDropERC721": [
        33407
      ],
      "ZkConnect": [
        33105
      ],
      "ZkConnectProof": [
        33540
      ],
      "ZkConnectRequestContent": [
        33466
      ],
      "ZkConnectRequestContentLib": [
        35409
      ],
      "ZkConnectResponse": [
        33525
      ],
      "ZkConnectVerifiedResult": [
        33558
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1982:37",
    "nodes": [
      {
        "id": 33228,
        "nodeType": "PragmaDirective",
        "src": "32:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 33229,
        "nodeType": "ImportDirective",
        "src": "58:70:37",
        "nodes": [],
        "absolutePath": "lib/zk-connect-onchain-verifier/src/libs/zk-connect/ZkConnectLib.sol",
        "file": "zk-connect-onchain-verifier/libs/zk-connect/ZkConnectLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33408,
        "sourceUnit": 33106,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33231,
        "nodeType": "ImportDirective",
        "src": "129:71:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33408,
        "sourceUnit": 29353,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33230,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29352,
              "src": "137:6:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33407,
        "nodeType": "ContractDefinition",
        "src": "202:1811:37",
        "nodes": [
          {
            "id": 33238,
            "nodeType": "VariableDeclaration",
            "src": "251:55:37",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "zkConnectRequestContent",
            "nameLocation": "283:23:37",
            "scope": 33407,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage",
              "typeString": "struct ZkConnectRequestContent"
            },
            "typeName": {
              "id": 33237,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33236,
                "name": "ZkConnectRequestContent",
                "nameLocations": [
                  "251:23:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33466,
                "src": "251:23:37"
              },
              "referencedDeclaration": 33466,
              "src": "251:23:37",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage_ptr",
                "typeString": "struct ZkConnectRequestContent"
              }
            },
            "visibility": "private"
          },
          {
            "id": 33240,
            "nodeType": "VariableDeclaration",
            "src": "313:28:37",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_baseTokenURI",
            "nameLocation": "328:13:37",
            "scope": 33407,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 33239,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "313:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "id": 33244,
            "nodeType": "EventDefinition",
            "src": "348:47:37",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "228a3ac0675af69daeaaa5b8d369fe2faae665e7f340f0b78ccbb84e17b4f694",
            "name": "BaseTokenURIChanged",
            "nameLocation": "354:19:37",
            "parameters": {
              "id": 33243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseTokenURI",
                  "nameLocation": "381:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33244,
                  "src": "374:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33241,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "373:21:37"
            }
          },
          {
            "id": 33294,
            "nodeType": "FunctionDefinition",
            "src": "401:506:37",
            "nodes": [],
            "body": {
              "id": 33293,
              "nodeType": "Block",
              "src": "573:334:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33266,
                      "mutability": "mutable",
                      "name": "claimRequest",
                      "nameLocation": "596:12:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33293,
                      "src": "583:25:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$33487_memory_ptr",
                        "typeString": "struct Claim"
                      },
                      "typeName": {
                        "id": 33265,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33264,
                          "name": "Claim",
                          "nameLocations": [
                            "583:5:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33487,
                          "src": "583:5:37"
                        },
                        "referencedDeclaration": 33487,
                        "src": "583:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33487_storage_ptr",
                          "typeString": "struct Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33271,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33269,
                        "name": "groupId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33254,
                        "src": "643:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      ],
                      "expression": {
                        "id": 33267,
                        "name": "ClaimRequestLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34312,
                        "src": "611:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ClaimRequestLib_$34312_$",
                          "typeString": "type(library ClaimRequestLib)"
                        }
                      },
                      "id": 33268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "627:5:37",
                      "memberName": "build",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33863,
                      "src": "611:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_bytes16_$returns$_t_struct$_Claim_$33487_memory_ptr_$",
                        "typeString": "function (bytes16) pure returns (struct Claim memory)"
                      }
                    },
                    "id": 33270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "634:7:37"
                    ],
                    "names": [
                      "groupId"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "611:41:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$33487_memory_ptr",
                      "typeString": "struct Claim memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "583:69:37"
                },
                {
                  "assignments": [
                    33274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33274,
                      "mutability": "mutable",
                      "name": "authRequest",
                      "nameLocation": "674:11:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33293,
                      "src": "662:23:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auth_$33497_memory_ptr",
                        "typeString": "struct Auth"
                      },
                      "typeName": {
                        "id": 33273,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33272,
                          "name": "Auth",
                          "nameLocations": [
                            "662:4:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33497,
                          "src": "662:4:37"
                        },
                        "referencedDeclaration": 33497,
                        "src": "662:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auth_$33497_storage_ptr",
                          "typeString": "struct Auth"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33280,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33277,
                          "name": "AuthType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33511,
                          "src": "720:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AuthType_$33511_$",
                            "typeString": "type(enum AuthType)"
                          }
                        },
                        "id": 33278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "729:4:37",
                        "memberName": "ANON",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33507,
                        "src": "720:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AuthType_$33511",
                          "typeString": "enum AuthType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AuthType_$33511",
                          "typeString": "enum AuthType"
                        }
                      ],
                      "expression": {
                        "id": 33275,
                        "name": "AuthRequestLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33796,
                        "src": "688:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AuthRequestLib_$33796_$",
                          "typeString": "type(library AuthRequestLib)"
                        }
                      },
                      "id": 33276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "703:5:37",
                      "memberName": "build",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33639,
                      "src": "688:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_pure$_t_enum$_AuthType_$33511_$returns$_t_struct$_Auth_$33497_memory_ptr_$",
                        "typeString": "function (enum AuthType) pure returns (struct Auth memory)"
                      }
                    },
                    "id": 33279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "710:8:37"
                    ],
                    "names": [
                      "authType"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "688:47:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auth_$33497_memory_ptr",
                      "typeString": "struct Auth memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "662:73:37"
                },
                {
                  "expression": {
                    "id": 33287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33281,
                      "name": "zkConnectRequestContent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33238,
                      "src": "745:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage",
                        "typeString": "struct ZkConnectRequestContent storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33284,
                          "name": "claimRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33266,
                          "src": "819:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$33487_memory_ptr",
                            "typeString": "struct Claim memory"
                          }
                        },
                        {
                          "id": 33285,
                          "name": "authRequest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33274,
                          "src": "846:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auth_$33497_memory_ptr",
                            "typeString": "struct Auth memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Claim_$33487_memory_ptr",
                            "typeString": "struct Claim memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_Auth_$33497_memory_ptr",
                            "typeString": "struct Auth memory"
                          }
                        ],
                        "expression": {
                          "id": 33282,
                          "name": "ZkConnectRequestContentLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35409,
                          "src": "771:26:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ZkConnectRequestContentLib_$35409_$",
                            "typeString": "type(library ZkConnectRequestContentLib)"
                          }
                        },
                        "id": 33283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "798:5:37",
                        "memberName": "build",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34683,
                        "src": "771:32:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_struct$_Claim_$33487_memory_ptr_$_t_struct$_Auth_$33497_memory_ptr_$returns$_t_struct$_ZkConnectRequestContent_$33466_memory_ptr_$",
                          "typeString": "function (struct Claim memory,struct Auth memory) pure returns (struct ZkConnectRequestContent memory)"
                        }
                      },
                      "id": 33286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "805:12:37",
                        "833:11:37"
                      ],
                      "names": [
                        "claimRequest",
                        "authRequest"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "771:88:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_memory_ptr",
                        "typeString": "struct ZkConnectRequestContent memory"
                      }
                    },
                    "src": "745:114:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage",
                      "typeString": "struct ZkConnectRequestContent storage ref"
                    }
                  },
                  "id": 33288,
                  "nodeType": "ExpressionStatement",
                  "src": "745:114:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33290,
                        "name": "baseTokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33250,
                        "src": "887:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33289,
                      "name": "_setBaseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33406,
                      "src": "870:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 33291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:30:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33292,
                  "nodeType": "ExpressionStatement",
                  "src": "870:30:37"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 33257,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33246,
                    "src": "530:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 33258,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33248,
                    "src": "536:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 33259,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33256,
                  "name": "ERC721",
                  "nameLocations": [
                    "523:6:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29352,
                  "src": "523:6:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "523:20:37"
              },
              {
                "arguments": [
                  {
                    "id": 33261,
                    "name": "appId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33252,
                    "src": "562:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  }
                ],
                "id": 33262,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 33260,
                  "name": "ZkConnect",
                  "nameLocations": [
                    "552:9:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33105,
                  "src": "552:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "552:16:37"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33246,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "427:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33294,
                  "src": "413:18:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33245,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33248,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "447:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33294,
                  "src": "433:20:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33247,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33250,
                  "mutability": "mutable",
                  "name": "baseTokenURI",
                  "nameLocation": "469:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33294,
                  "src": "455:26:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33249,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33252,
                  "mutability": "mutable",
                  "name": "appId",
                  "nameLocation": "491:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33294,
                  "src": "483:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 33251,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33254,
                  "mutability": "mutable",
                  "name": "groupId",
                  "nameLocation": "506:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33294,
                  "src": "498:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 33253,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:102:37"
            },
            "returnParameters": {
              "id": 33263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:37"
            },
            "scope": 33407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33334,
            "nodeType": "FunctionDefinition",
            "src": "913:383:37",
            "nodes": [],
            "body": {
              "id": 33333,
              "nodeType": "Block",
              "src": "980:316:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33301,
                      "mutability": "mutable",
                      "name": "zkConnectVerifiedResult",
                      "nameLocation": "1021:23:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33333,
                      "src": "990:54:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                        "typeString": "struct ZkConnectVerifiedResult"
                      },
                      "typeName": {
                        "id": 33300,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33299,
                          "name": "ZkConnectVerifiedResult",
                          "nameLocations": [
                            "990:23:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33558,
                          "src": "990:23:37"
                        },
                        "referencedDeclaration": 33558,
                        "src": "990:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_storage_ptr",
                          "typeString": "struct ZkConnectVerifiedResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33306,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33303,
                        "name": "zkConnectResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33296,
                        "src": "1054:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 33304,
                        "name": "zkConnectRequestContent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33238,
                        "src": "1073:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage",
                          "typeString": "struct ZkConnectRequestContent storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage",
                          "typeString": "struct ZkConnectRequestContent storage ref"
                        }
                      ],
                      "id": 33302,
                      "name": "verify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33002,
                        33025,
                        33049,
                        33094
                      ],
                      "referencedDeclaration": 33025,
                      "src": "1047:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_struct$_ZkConnectRequestContent_$33466_memory_ptr_$returns$_t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr_$",
                        "typeString": "function (bytes memory,struct ZkConnectRequestContent memory) returns (struct ZkConnectVerifiedResult memory)"
                      }
                    },
                    "id": 33305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:50:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                      "typeString": "struct ZkConnectVerifiedResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "990:107:37"
                },
                {
                  "assignments": [
                    33308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33308,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1116:2:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33333,
                      "src": "1108:10:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33307,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1108:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33319,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 33311,
                            "name": "zkConnectVerifiedResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33301,
                            "src": "1132:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                              "typeString": "struct ZkConnectVerifiedResult memory"
                            }
                          },
                          "id": 33312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1156:14:37",
                          "memberName": "signedMessages",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33557,
                          "src": "1132:38:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        "id": 33314,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 33313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1171:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1132:41:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 33316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1176:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33315,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1176:7:37",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 33317,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1175:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 33309,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1121:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1125:6:37",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1121:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1108:77:37"
                },
                {
                  "assignments": [
                    33321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33321,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1203:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33333,
                      "src": "1195:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33320,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1195:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33327,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 33322,
                          "name": "zkConnectVerifiedResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33301,
                          "src": "1213:23:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                            "typeString": "struct ZkConnectVerifiedResult memory"
                          }
                        },
                        "id": 33323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1237:13:37",
                        "memberName": "verifiedAuths",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33554,
                        "src": "1213:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VerifiedAuth_$33584_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VerifiedAuth memory[] memory"
                        }
                      },
                      "id": 33325,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 33324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1251:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1213:40:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VerifiedAuth_$33584_memory_ptr",
                        "typeString": "struct VerifiedAuth memory"
                      }
                    },
                    "id": 33326,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1254:6:37",
                    "memberName": "userId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33579,
                    "src": "1213:47:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1195:65:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33329,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33308,
                        "src": "1277:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33330,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33321,
                        "src": "1281:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33328,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29026,
                      "src": "1271:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:18:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33332,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:18:37"
                }
              ]
            },
            "functionSelector": "d3b12a37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimWithZkConnect",
            "nameLocation": "922:18:37",
            "parameters": {
              "id": 33297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33296,
                  "mutability": "mutable",
                  "name": "zkConnectResponse",
                  "nameLocation": "954:17:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33334,
                  "src": "941:30:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33295,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:32:37"
            },
            "returnParameters": {
              "id": 33298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "980:0:37"
            },
            "scope": 33407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33381,
            "nodeType": "FunctionDefinition",
            "src": "1302:437:37",
            "nodes": [],
            "body": {
              "id": 33380,
              "nodeType": "Block",
              "src": "1372:367:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33341,
                      "mutability": "mutable",
                      "name": "zkConnectVerifiedResult",
                      "nameLocation": "1413:23:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33380,
                      "src": "1382:54:37",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                        "typeString": "struct ZkConnectVerifiedResult"
                      },
                      "typeName": {
                        "id": 33340,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 33339,
                          "name": "ZkConnectVerifiedResult",
                          "nameLocations": [
                            "1382:23:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33558,
                          "src": "1382:23:37"
                        },
                        "referencedDeclaration": 33558,
                        "src": "1382:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_storage_ptr",
                          "typeString": "struct ZkConnectVerifiedResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33346,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33343,
                        "name": "zkConnectResponse",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33336,
                        "src": "1446:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 33344,
                        "name": "zkConnectRequestContent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33238,
                        "src": "1465:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage",
                          "typeString": "struct ZkConnectRequestContent storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ZkConnectRequestContent_$33466_storage",
                          "typeString": "struct ZkConnectRequestContent storage ref"
                        }
                      ],
                      "id": 33342,
                      "name": "verify",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33002,
                        33025,
                        33049,
                        33094
                      ],
                      "referencedDeclaration": 33025,
                      "src": "1439:6:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_struct$_ZkConnectRequestContent_$33466_memory_ptr_$returns$_t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr_$",
                        "typeString": "function (bytes memory,struct ZkConnectRequestContent memory) returns (struct ZkConnectVerifiedResult memory)"
                      }
                    },
                    "id": 33345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:50:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                      "typeString": "struct ZkConnectVerifiedResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1382:107:37"
                },
                {
                  "assignments": [
                    33348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33348,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1508:2:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33380,
                      "src": "1500:10:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33347,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1500:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33359,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 33351,
                            "name": "zkConnectVerifiedResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33341,
                            "src": "1524:23:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                              "typeString": "struct ZkConnectVerifiedResult memory"
                            }
                          },
                          "id": 33352,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1548:14:37",
                          "memberName": "signedMessages",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33557,
                          "src": "1524:38:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        },
                        "id": 33354,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 33353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1563:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1524:41:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 33356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1568:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33355,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1568:7:37",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 33357,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1567:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        }
                      ],
                      "expression": {
                        "id": 33349,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1513:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 33350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1517:6:37",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1513:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 33358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1500:77:37"
                },
                {
                  "assignments": [
                    33361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33361,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1595:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33380,
                      "src": "1587:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1587:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33367,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 33362,
                          "name": "zkConnectVerifiedResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33341,
                          "src": "1605:23:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ZkConnectVerifiedResult_$33558_memory_ptr",
                            "typeString": "struct ZkConnectVerifiedResult memory"
                          }
                        },
                        "id": 33363,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1629:13:37",
                        "memberName": "verifiedAuths",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33554,
                        "src": "1605:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_VerifiedAuth_$33584_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VerifiedAuth memory[] memory"
                        }
                      },
                      "id": 33365,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 33364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1643:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1605:40:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VerifiedAuth_$33584_memory_ptr",
                        "typeString": "struct VerifiedAuth memory"
                      }
                    },
                    "id": 33366,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1646:6:37",
                    "memberName": "userId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 33579,
                    "src": "1605:47:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1587:65:37"
                },
                {
                  "assignments": [
                    33369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33369,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "1670:4:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 33380,
                      "src": "1662:12:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33368,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1662:7:37",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33373,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33371,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33361,
                        "src": "1685:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33370,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28571,
                      "src": "1677:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 33372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:16:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1662:31:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33375,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33369,
                        "src": "1714:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33376,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33348,
                        "src": "1720:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33377,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33361,
                        "src": "1724:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33374,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29178,
                      "src": "1704:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 33378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33379,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:28:37"
                }
              ]
            },
            "functionSelector": "5f64d5f4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferWithZkConnect",
            "nameLocation": "1311:21:37",
            "parameters": {
              "id": 33337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33336,
                  "mutability": "mutable",
                  "name": "zkConnectResponse",
                  "nameLocation": "1346:17:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33381,
                  "src": "1333:30:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33335,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1332:32:37"
            },
            "returnParameters": {
              "id": 33338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:37"
            },
            "scope": 33407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33392,
            "nodeType": "FunctionDefinition",
            "src": "1745:120:37",
            "nodes": [],
            "body": {
              "id": 33391,
              "nodeType": "Block",
              "src": "1828:37:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33389,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33240,
                    "src": "1845:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 33388,
                  "id": 33390,
                  "nodeType": "Return",
                  "src": "1838:20:37"
                }
              ]
            },
            "baseFunctions": [
              28630
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1754:8:37",
            "overrides": {
              "id": 33385,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1795:8:37"
            },
            "parameters": {
              "id": 33384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33383,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1771:2:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33392,
                  "src": "1763:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:12:37"
            },
            "returnParameters": {
              "id": 33388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33387,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33392,
                  "src": "1813:13:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33386,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1812:15:37"
            },
            "scope": 33407,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 33406,
            "nodeType": "FunctionDefinition",
            "src": "1871:140:37",
            "nodes": [],
            "body": {
              "id": 33405,
              "nodeType": "Block",
              "src": "1928:83:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33397,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33240,
                      "src": "1938:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33398,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33394,
                      "src": "1954:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1938:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33400,
                  "nodeType": "ExpressionStatement",
                  "src": "1938:23:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 33402,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33394,
                        "src": "1996:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 33401,
                      "name": "BaseTokenURIChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33244,
                      "src": "1976:19:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 33403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33404,
                  "nodeType": "EmitStatement",
                  "src": "1971:33:37"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBaseTokenURI",
            "nameLocation": "1880:16:37",
            "parameters": {
              "id": 33395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33394,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "1911:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 33406,
                  "src": "1897:21:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 33393,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1896:23:37"
            },
            "returnParameters": {
              "id": 33396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1928:0:37"
            },
            "scope": 33407,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33232,
              "name": "ERC721",
              "nameLocations": [
                "227:6:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29352,
              "src": "227:6:37"
            },
            "id": 33233,
            "nodeType": "InheritanceSpecifier",
            "src": "227:6:37"
          },
          {
            "baseName": {
              "id": 33234,
              "name": "ZkConnect",
              "nameLocations": [
                "235:9:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33105,
              "src": "235:9:37"
            },
            "id": 33235,
            "nodeType": "InheritanceSpecifier",
            "src": "235:9:37"
          }
        ],
        "canonicalName": "ZKDropERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33407,
          33105,
          29352,
          29513,
          29468,
          30064,
          30076,
          29865
        ],
        "name": "ZKDropERC721",
        "nameLocation": "211:12:37",
        "scope": 33408,
        "usedErrors": [
          32929,
          32935,
          32941
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 37
}
